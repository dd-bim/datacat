type CatalogRecordStatistics {
  id: ID!
  count: Int!
}

type CatalogStatistics {
  items: [CatalogRecordStatistics!]!
}

type SearchResultConnection {
  nodes: [XtdRoot!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

input LocaleInput {
  languageTag: ID!
}

type Language {
  id: String!
  languageTag: String!
  displayCountry(input: LocaleInput): String!
  displayLanguage(input: LocaleInput): String!
}

type Tag {
  id: ID!
  name: String!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
}

type TagConnection {
  nodes: [Tag!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type HierarchyPayload {
  nodes: [XtdObject!]!
  paths: [[ID!]!]!
}

type VerificationPayload {
  nodes: [XtdObject!]!
  paths: [ID!]!
}

type findExportCatalogRecordsPayload {
  nodes: [ExportResult!]!
}

type findExportCatalogRecordsRelationshipsPayload {
  nodes: [ExportRelationshipResult!]!
}

type ExportResult {
  id: ID!
  type: String
  tags: [String]
  name: String
  name_en: String
  description: String
  description_en: String
  definition: String
  definition_en: String
  created: String
  createdBy: String
  lastModified: String
  lastModifiedBy: String
  majorVersion: Int
  minorVersion: Int
  status: XtdStatusOfActivationEnum
  languageOfCreator: String
  countryOfOrigin: String
  examples: String
  languages: [String]
  deprecationExplanation: String
  dataType: String
  dataFormat: String
  uri: String
  author: String
  isbn: String
  publisher: String
  dateOfPublication: String
  scale: XtdUnitScaleEnum
  base: XtdUnitBaseEnum
}

type ExportRelationshipResult {
  entity1: ID!
  relationship: String!
  entity2: ID!
}

# inputs

input CatalogEntryTypeFilterInput {
  in: [CatalogRecordType!]
}

input TagFilterInput {
  in: [ID!]
}

input CatalogEntryFilterInput {
  catalogEntryType: CatalogEntryTypeFilterInput
  tags: TagFilterInput
}

input SearchInput {
  query: String
  filters: [CatalogEntryFilterInput!]
  entityTypeIn: [CatalogRecordType!]
  entityTypeNotIn: [CatalogRecordType!]
  idIn: [ID!]
  idNotIn: [ID!]
  tagged: [ID!]
  """
  Default: 0
  """
  pageNumber: Int
  pageSize: Int
}

input HierarchyRootNodeFilterInput {
  entityTypeIn: [CatalogRecordType!]
  entityTypeNotIn: [CatalogRecordType!]
  idIn: [ID!]
  idNotIn: [ID!]
  tagged: [ID!]
}

input HierarchyFilterInput {
  rootNodeFilter: HierarchyRootNodeFilterInput!
}

input VerificationNodeTypeFilterInput {
  entityTypeIn: [CatalogRecordType!]
}

input VerificationFilterInput {
  nodeTypeFilter: VerificationNodeTypeFilterInput!
}

input FilterInput {
  query: String
  idIn: [ID!]
  idNotIn: [ID!]
  tagged: [ID!]
  pageNumber: Int
  pageSize: Int
}

# Query type

input LocalizationInput {
  languageTags: [String!]
}

interface XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  tags: [Tag!]!
}

interface XtdObject implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
}

interface XtdConcept implements XtdRoot & XtdObject {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
}

type XtdExternalDocument implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  documentUri: String
  author: String
  isbn: String
  publisher: String
  dateOfPublication: String
  languages: [XtdLanguage] # has to be required double
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  documents: [XtdConcept!]!
  referenceDocuments: [XtdExternalDocument!]!
}

type XtdSubject implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  connectedSubjects: [XtdRelationshipToSubject!]!
  connectingSubjects: [XtdRelationshipToSubject!]!
  properties: [XtdProperty!]!
  # filters: [XtdFilter]
}

type XtdProperty implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  dataType: XtdDataTypeEnum # required
  dataFormat: String
  symbols: [XtdSymbol]
  boundaryValues: [XtdInterval]
  dimension: XtdDimension # required
  quantityKinds: [XtdQuantityKind]
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  connectedProperties: [XtdRelationshipToProperty!]!
  connectingProperties: [XtdRelationshipToProperty!]!
  subjects: [XtdSubject!]!
  possibleValues: [XtdValueList!]
  units: [XtdUnit!]
}

type XtdValueList implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  language: XtdLanguage
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  unit: XtdUnit
  values: [XtdOrderedValue!]!
  properties: [XtdProperty!]
}

type XtdUnit implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  scale: XtdUnitScaleEnum # required
  base: XtdUnitBaseEnum # required
  symbol: XtdMultiLanguageText 
  offset: XtdRational # required
  coefficient: XtdRational # required
  dimension: XtdDimension # required
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  properties: [XtdProperty!]
  valueLists: [XtdValueList!]
}

type XtdOrderedValue implements XtdRoot & XtdObject {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  orderedValue: XtdValue! # should be exact one
  valueLists: [XtdValueList!]!
  order: Int!
}

type XtdValue implements XtdRoot & XtdObject {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  orderedValues: [XtdOrderedValue!]
  nominalValue: String
}

type XtdRelationshipToSubject implements XtdRoot & XtdObject {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  connectingSubject: XtdSubject!
  targetSubjects: [XtdSubject!]!
  scopeSubjects: [XtdSubject!]
  relationshipType: XtdRelationshipType # Should be changed to required
}

type XtdRelationshipToProperty implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  connectingProperty: XtdProperty!
  targetProperties: [XtdProperty!]!
  relationshipType: XtdPropertyRelationshipTypeEnum!
}

type XtdRelationshipType implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  kind: XtdRelationshipKindEnum!
}

type XtdLanguage implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  englishName: String!
  nativeName: String
  code: String!
  comments: [String]
  tags: [Tag!]!
}

type XtdDimension implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  thermodynamicTemperatureExponent: XtdRational # required
  electricCurrentExponent: XtdRational # required
  timeExponent: XtdRational # required
  massExponent: XtdRational # required
  lengthExponent: XtdRational # required
  luminousIntensityExponent: XtdRational # required
  amountOfSubstanceExponent: XtdRational # required
}

type XtdRational implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  tags: [Tag!]!
  numerator: Int!
  denominator: Int!
}

type XtdMultiLanguageText implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  tags: [Tag!]!
  texts: [XtdText!]!
}

type XtdText implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  tags: [Tag!]!
  text: String!
  language: XtdLanguage!
}

type XtdSymbol implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  tags: [Tag!]!
  subject: XtdSubject
  symbol: XtdText #required
}

type XtdInterval implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  tags: [Tag!]!
  minimumIncluded: Boolean!
  maximumIncluded: Boolean!
  minimum: XtdValueList
  maximum: XtdValueList
}

type XtdDictionary implements XtdRoot {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  tags: [Tag!]!
  name: XtdMultiLanguageText # required
  concepts(pageSize: Int, pageNumber: Int): XtdObjectConnection!
}

type XtdSubdivision implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  code: String!
  subdivisions: [XtdSubdivision]
}

type XtdCountry implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  code: String!
  subdivisions: [XtdSubdivision]
}

type XtdQuantityKind implements XtdRoot & XtdObject & XtdConcept {
  id: ID!
  recordType: CatalogRecordType!
  created: String!
  createdBy: String!
  lastModified: String!
  lastModifiedBy: String!
  majorVersion: Int!
  minorVersion: Int!
  dictionary: XtdDictionary # required
  dateOfCreation: String # required
  status: XtdStatusOfActivationEnum # required
  replacedObjects: [XtdObject!]!
  replacingObjects: [XtdObject!]!
  deprecationExplanation: XtdMultiLanguageText
  definition: XtdMultiLanguageText # required
  examples: [XtdMultiLanguageText]
  languageOfCreator: XtdLanguage # required
  similarTo: [XtdConcept!]!
  # visualRepresenation: [XtdVisualRepresenation]
  countryOfOrigin: XtdCountry
  name(input: LocalizationInput): String
  names: [XtdMultiLanguageText!]!
  description(input: LocalizationInput): String
  descriptions: [XtdMultiLanguageText!]!
  comment(input: LocalizationInput): String
  comments: [XtdMultiLanguageText!]!
  tags: [Tag!]!
  uri: String
  referenceDocuments: [XtdExternalDocument!]!
  units: [XtdUnit]
  dimension: XtdDimension
}

# Connections

type PageInfo {
  pageNumber: Int!
  pageSize: Int!
  pageElements: Int!
  totalPages: Int!
  hasNext: Boolean!
  hasPrevious: Boolean!
  isFirst: Boolean!
  isLast: Boolean!
}

type XtdExternalDocumentConnection {
  nodes: [XtdExternalDocument!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdRootConnection {
  nodes: [XtdRoot!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdConceptConnection {
  nodes: [XtdConcept!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdObjectConnection {
  nodes: [XtdObject!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdPropertyConnection {
  nodes: [XtdProperty!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdSubjectConnection {
  nodes: [XtdSubject!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdUnitConnection {
  nodes: [XtdUnit!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdValueConnection {
  nodes: [XtdValue!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdValueListConnection {
  nodes: [XtdValueList!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdOrderedValueConnection {
  nodes: [XtdOrderedValue!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdRelationshipToSubjectConnection {
  nodes: [XtdRelationshipToSubject!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdRelationshipToPropertyConnection {
  nodes: [XtdRelationshipToProperty!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdLanguageConnection {
  nodes: [XtdLanguage!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdDimensionConnection {
  nodes: [XtdDimension!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdRationalConnection {
  nodes: [XtdRational!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdMultiLanguageTextConnection {
  nodes: [XtdMultiLanguageText!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdTextConnection {
  nodes: [XtdText!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdSymbolConnection {
  nodes: [XtdSymbol!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdIntervalConnection {
  nodes: [XtdInterval!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdDictionaryConnection {
  nodes: [XtdDictionary!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdSubdivisionConnection {
  nodes: [XtdSubdivision!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdCountryConnection {
  nodes: [XtdCountry!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type XtdQuantityKindConnection {
  nodes: [XtdQuantityKind!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type VerificationConnection {
  nodes: [XtdObject!]!
  paths: [ID!]!
  pageInfo: PageInfo!
  totalElements: Int!
}

type Query {
  statistics: CatalogStatistics!

  node(id: ID!): XtdRoot

  search(
    input: SearchInput
    pageSize: Int
    pageNumber: Int
  ): SearchResultConnection!

  hierarchy(input: HierarchyFilterInput!): HierarchyPayload!

  findPropGroupWithoutProp(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findPropWithoutSubjectOrPropGroup(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findThemeWithoutSubject(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findSubjectWithoutProp(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findValueListWithoutProp(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findUnitWithoutValueList(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findValueWithoutValueList(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMissingTags(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMissingEnglishName(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMultipleIDs(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMissingDescription(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMissingEnglishDescription(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMultipleNames(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMultipleNamesAcrossClasses(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMissingDictionary(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findMissingReferenceDocument(pageNumber: Int!, pageSize: Int!): VerificationConnection!
  findInactiveConcepts(pageNumber: Int!, pageSize: Int!): VerificationConnection!

  findExportCatalogRecords: findExportCatalogRecordsPayload!

  findExportCatalogRecordsRelationships: findExportCatalogRecordsRelationshipsPayload!

  getTag(id: ID!): Tag!
  findTags(input: FilterInput): TagConnection!

  getExternalDocument(id: ID!): XtdExternalDocument
  findExternalDocuments(input: FilterInput): XtdExternalDocumentConnection!

  getProperty(id: ID!): XtdProperty
  findProperties(input: FilterInput): XtdPropertyConnection!

  getSubject(id: ID!): XtdSubject
  findSubjects(input: FilterInput): XtdSubjectConnection!

  getUnit(id: ID!): XtdUnit
  findUnits(input: FilterInput): XtdUnitConnection!

  getValue(id: ID!): XtdValue
  findValues(input: FilterInput): XtdValueConnection!

  getValueList(id: ID!): XtdValueList
  findValueLists(input: FilterInput): XtdValueListConnection!

  getOrderedValue(id: ID!): XtdOrderedValue
  findOrderedValues(input: FilterInput): XtdOrderedValueConnection!

  getRelationshipToSubject(id: ID!): XtdRelationshipToSubject
  findRelationshipToSubjects(
    input: FilterInput
  ): XtdRelationshipToSubjectConnection!

  getRelationshipToProperty(id: ID!): XtdRelationshipToProperty
  findRelationshipToProperties(
    input: FilterInput
  ): XtdRelationshipToPropertyConnection!

  getLanguage(id: ID!): XtdLanguage
  findLanguages(input: FilterInput): XtdLanguageConnection!
  getLanguageByCode(code: String!): XtdLanguage

  getDimension(id: ID!): XtdDimension
  findDimensions(input: FilterInput): XtdDimensionConnection!

  getRational(id: ID!): XtdRational
  findRationals(input: FilterInput): XtdRationalConnection!

  getMultiLanguageText(id: ID!): XtdMultiLanguageText
  findMultiLanguageTexts(input: FilterInput): XtdMultiLanguageTextConnection!

  getText(id: ID!): XtdText
  findTexts(input: FilterInput): XtdTextConnection!

  getSymbol(id: ID!): XtdSymbol
  findSymbols(input: FilterInput): XtdSymbolConnection!

  getInterval(id: ID!): XtdInterval
  findIntervals(input: FilterInput): XtdIntervalConnection!

  getDictionary(id: ID!): XtdDictionary
  findDictionaries(input: FilterInput): XtdDictionaryConnection!

  getSubdivision(id: ID!): XtdSubdivision
  findSubdivisions(input: FilterInput): XtdSubdivisionConnection!

  getCountry(id: ID!): XtdCountry
  findCountries(input: FilterInput): XtdCountryConnection!

  getQuantityKind(id: ID!): XtdQuantityKind
  findQuantityKinds(input: FilterInput): XtdQuantityKindConnection!

  getConcept(id: ID!): XtdConcept
  findConcepts(input: FilterInput): XtdConceptConnection!

  getObject(id: ID!): XtdObject
  findObjects(input: FilterInput): XtdObjectConnection!
}
